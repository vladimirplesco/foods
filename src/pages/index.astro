---
import "@fontsource-variable/inter";
import "../assets/css/global.css";

import { getCollection } from "astro:content";
import { sortDishes } from "../utils/helpers";

import Theme from "../components/Theme.astro";
// import Lists from "../components/Lists.astro";

const dishes = await sortDishes(getCollection("dishes"))
.map((dish) => ({
  data: dish.data,
  slug: dish.slug,
  body: dish.body ? true : false,
}));
---

<html lang="ru">
  <head>
    <meta charset="utf-8" />
    <meta name="robots" content="noindex, nofollow, noarchive" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Foods</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  </head>
  <body>
    <Theme />
    <h1>Hello</h1>
    <div>
      <p>Мои блюда:</p>
        <ul>
          {sortDishes(dishes).map(dish => <li>{dish.data.foods[1]}</li>)}
        </ul>
    </div>
    <section class="_section">
      <div class="_container">
        <div>
          <div x-data="dishes">
            <template x-for="dish in dishes" :key="dish.slug">
              <h2 x-text="dish.data.name"></h2>
            </template>
    
          </div>
        </div>
    </section>
    <!-- <Lists /> -->
  </body>
</html>
<script>
  import "boxicons";
</script>
<script define:vars={{ dishes }}>
  document.addEventListener("alpine:init", () => {
    Alpine.data("dishes", () => ({
      get dishes() {
        console.log("hello");
        return dishes;
      },
    }));
  });
</script>
<script>
  import Alpine from "alpinejs";
  import persist from "@alpinejs/persist";

  Alpine.plugin(persist);
  window["Alpine"] = Alpine;
  Alpine.start();
</script>
